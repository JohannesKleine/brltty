#!/bin/bash
. /brltty/current/libexec/canute-prologue.sh
shopt -s nullglob

showProgramUsagePurpose() {
cat <<END_OF_PROGRAM_USAGE_PURPOSE
Manage which table is used to render text on the Canute's braille display.
END_OF_PROGRAM_USAGE_PURPOSE
}

showProgramUsageNotes() {
cat <<END_OF_PROGRAM_USAGE_NOTES
The table-name parameter specifies the new table to be used for rendering braille.
If it isn't specified then the name and type of the current table are shown.
It may refer to a text (computer braillei), contraction (literary braille), or LibLouis table.
This can be constrained via the -c, -l, and -L options.
If none of these options are specified then -c and -l are assumed;
-L isn't because many BRLTTY and LibLouis tables have the same names.
END_OF_PROGRAM_USAGE_NOTES
}

addProgramOption c flag allowTextTable "interpret the name as that of a computer braille table"
addProgramOption l flag allowContractionTable "interpret the name as that of a literary braille table"
addProgramOption L flag allowLiblouisTable "interpret the name as that of a LibLouis table"
optionalProgramParameters
addProgramParameter "table-name" tableName "the braille table to switch to"
parseProgramArguments "${@}"
set -e

if [ -n "${tableName}" ]
then
   if "${allowTextTable}" || "${allowContractionTable}" || "${allowLiblouisTable}"
   then
      defaultTableTypes=false
   else
      defaultTableTypes=true
   fi

   foundTextTable=0
   foundContractionTable=0
   foundLiblouisTable=0

   if "${allowTextTable}" || "${defaultTableTypes}"
   then
      tablePath="${textTablesDirectory}/${tableName}.${textTableExtension}"
      ! [ -f "${tablePath}" ] || foundTextTable=1
   fi

   if "${allowContractionTable}" || "${defaultTableTypes}"
   then
      tablePath="${contractionTablesDirectory}/${tableName}.${contractionTableExtension}"
      ! [ -f "${tablePath}" ] || foundContractionTable=1
   fi

   if "${allowLiblouisTable}"
   then
      set -- $(
         set -e
         cd "${liblouisTablesDirectory}"
         echo "${tableName}".*
      )

      if [ "${#}" -eq 1 ]
      then
         liblouisTableName="${1##*/}"
      elif [ "${#}" -gt 1 ]
      then
         logWarning "ambiguous LibLouis table: ${*}"
      fi

      foundLiblouisTable="${#}"
   fi

   foundCount=$((foundTextTable + foundContractionTable + foundLiblouisTable))
   ((foundCount < 2)) || semanticError "ambiguous table name: ${tableName}"

   if ((foundTextTable))
   then
      brailleVariant="computer"
      literaryBraille="no"
   elif ((foundContractionTable))
   then
      brailleVariant="literary"
      literaryBraille="yes"
   elif ((foundLiblouisTable))
   then
      brailleVariant="literary"
      literaryBraille="yes"
      tableName="louis:${liblouisTableName}"
   else
      semanticError "table not found: ${tableName}"
   fi

   "${programDirectory}/canute-parameter" "${brailleVariant}-braille-table" "${tableName}"
   "${programDirectory}/canute-parameter" "literary-braille" "${literaryBraille}"
else
   parameter="literary-braille"
   response="$("${programDirectory}/canute-parameter" "${parameter}")"

   case "${response}"
   in
       true) brailleVariant="literary";;
      false) brailleVariant="computer";;
      *) semanticError "unexpected response: ${parameter}=${response}";;
   esac

   parameter="${brailleVariant}-braille-table"
   tableName="$("${programDirectory}/canute-parameter" "${parameter}")"
   echo "${tableName} - ${brailleVariant} braille"
fi

exit 0
